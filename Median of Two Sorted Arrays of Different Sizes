class Solution{
    public:
    double MedianOfArrays(vector<int>& a1, vector<int>& a2)
    {
vector<int>v;
int s1=0,s2=0;
int n=(a1.size()+a2.size())/2;
    while(a1.size()>s1&&a2.size()>s2)
    {
        
        if(a1[s1]<a2[s2])
        {
             v.push_back(a1[s1]);
            s1++;
            if(v.size()==n+1&&n*2!=a1.size()+a2.size())
            {
                return v[v.size()-1];
            }
            else if(v.size()==n+1)
            {
                double ans = ((double)v[v.size()-2]+(double)v[v.size()-1])/2.0;
                return ans;
            }
           
        }
        else
        {
              v.push_back(a2[s2]);
            s2++;
            if(v.size()==n+1&&n*2!=a1.size()+a2.size())
            {
                return v[v.size()-1];
            }
            else if(v.size()==n+1)
            {
                 double ans = ((double)v[v.size()-2]+(double)v[v.size()-1])/2.0;
                return ans;
            }
          
        }
    }
    while(s1<a1.size())
    {
          v.push_back(a1[s1]);
            s1++;
        if(v.size()==n+1&&n*2!=a1.size()+a2.size())
            {
                return v[v.size()-1];
            }
            else if(v.size()==n+1)
            {
                 double ans = ((double)v[v.size()-2]+(double)v[v.size()-1])/2.0;
                return ans;
            }
          
    }
     while(s2<a2.size())
    {
          v.push_back(a2[s2]);
            s2++;
        if(v.size()==n+1&&n*2!=a1.size()+a2.size())
            {
                return v[v.size()-1];
            }
            else if(v.size()==n+1)
            {
                 double ans = ((double)v[v.size()-2]+(double)v[v.size()-1])/2.0;
                return ans;
            }
          
    }
    return 0;
    }
};
